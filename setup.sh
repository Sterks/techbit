#!/bin/bash

# =============================================================================
# –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê –ò –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï TECHBIT
# =============================================================================
#
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –¥–≤—É—Ö —Ä–µ–∂–∏–º–∞—Ö:
#
# 1. –ü–û–õ–ù–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê (–Ω–∞ —á–∏—Å—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ):
#    curl -sSL https://raw.githubusercontent.com/your-repo/setup.sh | bash
#    - –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç Docker (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
#    - –°–∫–∞—á–∏–≤–∞–µ—Ç –≤—Å–µ —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞
#    - –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ
#    - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
#
# 2. –õ–û–ö–ê–õ–¨–ù–û–ï –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï (–µ—Å–ª–∏ —Ñ–∞–π–ª—ã —É–∂–µ –µ—Å—Ç—å):
#    ./setup.sh
#    - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
#    - –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
#    - –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç SSL
#
# –î–û–ú–ï–ù: techbit.su | EMAIL: runov.denis@yandex.ru
# =============================================================================

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

print_status() { echo -e "${BLUE}[INFO]${NC} $1"; }
print_success() { echo -e "${GREEN}[SUCCESS]${NC} $1"; }
print_warning() { echo -e "${YELLOW}[WARNING]${NC} $1"; }
print_error() { echo -e "${RED}[ERROR]${NC} $1"; }

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
if [[ -f "$SCRIPT_DIR/docker-compose.yml" && -f "$SCRIPT_DIR/nginx/nginx.conf" ]]; then
    MODE="local"
    print_status "–†–µ–∂–∏–º: –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
else
    MODE="install"
    print_status "–†–µ–∂–∏–º: –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞"
fi

echo "üöÄ TechBit - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ"
echo "============================================================================="

# =============================================================================
# –§–£–ù–ö–¶–ò–ò –£–°–¢–ê–ù–û–í–ö–ò –°–ò–°–¢–ï–ú–ù–´–• –ö–û–ú–ü–û–ù–ï–ù–¢–û–í
# =============================================================================

install_docker() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker..."
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤
    if [[ -f /etc/os-release ]]; then
        . /etc/os-release
        OS=$ID
    else
        print_error "–ù–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤ Linux"
        exit 1
    fi
    
    case $OS in
        ubuntu|debian)
            # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤
            sudo apt-get update
            
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
            sudo apt-get install -y \
                ca-certificates \
                curl \
                gnupg \
                lsb-release
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ GPG –∫–ª—é—á–∞ Docker
            sudo mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/$OS/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker
            echo \
                "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/$OS \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
            # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
            sudo apt-get update
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            ;;
        centos|rhel|fedora)
            sudo yum install -y yum-utils
            sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            sudo yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            sudo systemctl start docker
            sudo systemctl enable docker
            ;;
        *)
            print_error "–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤: $OS"
            print_status "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –≤—Ä—É—á–Ω—É—é: https://docs.docker.com/engine/install/"
            exit 1
            ;;
    esac
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
    sudo usermod -aG docker $USER
    
    print_success "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    print_warning "–ü–µ—Ä–µ–ª–æ–≥–∏–Ω—å—Ç–µ—Å—å –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: newgrp docker"
}

check_system_requirements() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –û–°
    if [[ "$OSTYPE" != "linux-gnu"* ]]; then
        print_error "–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ Linux"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤
    if [[ $EUID -eq 0 ]]; then
        print_error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç root!"
        print_status "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å sudo –ø—Ä–∞–≤–∞–º–∏"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
    if ! command -v docker &> /dev/null; then
        print_warning "Docker –Ω–µ –Ω–∞–π–¥–µ–Ω"
        if [[ $MODE == "install" ]]; then
            read -p "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏? (y/N): " -n 1 -r
            echo
            if [[ $REPLY =~ ^[Yy]$ ]]; then
                install_docker
                # –ü–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è
                print_warning "Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –ø–æ—Å–ª–µ –ø–µ—Ä–µ–ª–æ–≥–∏–Ω–∞:"
                print_status "logout && ssh user@server"
                print_status "curl -sSL https://your-domain/setup.sh | bash"
                exit 0
            else
                print_error "Docker –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
                exit 1
            fi
        else
            print_error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ."
            exit 1
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ docker compose
    if ! docker compose version &> /dev/null; then
        print_error "Docker Compose –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        print_status "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Compose –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ 80 –∏ 443..."
    if ss -tlnp 2>/dev/null | grep -q ":80 " || netstat -tlnp 2>/dev/null | grep -q ":80 "; then
        print_warning "–ü–æ—Ä—Ç 80 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    fi
    if ss -tlnp 2>/dev/null | grep -q ":443 " || netstat -tlnp 2>/dev/null | grep -q ":443 "; then
        print_warning "–ü–æ—Ä—Ç 443 —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è"
    fi
    
    print_success "–°–∏—Å—Ç–µ–º–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã"
}

# =============================================================================
# –§–£–ù–ö–¶–ò–ò –ó–ê–ì–†–£–ó–ö–ò –ò –ù–ê–°–¢–†–û–ô–ö–ò –ü–†–û–ï–ö–¢–ê
# =============================================================================

create_env_file() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env..."
    
    cat > .env << 'EOF'
# =============================================================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø TECHBIT –î–õ–Ø –ü–†–û–î–ê–ö–®–ï–ù–ê
# =============================================================================

# –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
NODE_ENV=production
EMAIL_TEST_MODE=false

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ò SMTP –î–õ–Ø –û–¢–ü–†–ê–í–ö–ò –ü–û–ß–¢–´
# =============================================================================
# –î–ª—è Yandex Mail (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è):
SMTP_HOST=smtp.yandex.ru
SMTP_PORT=465
SMTP_SECURE=true

# –î–ª—è Gmail (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞):
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_SECURE=false

# –í–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –ó–ê–ü–û–õ–ù–ò–¢–ï!)
SMTP_USER=runov.denis@yandex.ru
SMTP_PASS=–≤–∞—à-–ø–∞—Ä–æ–ª—å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è-–∑–¥–µ—Å—å
SMTP_FROM=runov.denis@yandex.ru
ADMIN_EMAIL=runov.denis@yandex.ru

# =============================================================================
# –ù–ê–°–¢–†–û–ô–ö–ò TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô (–û–ü–¶–ò–û–ù–ê–õ–¨–ù–û)
# =============================================================================
# –ü–æ–ª—É—á–∏—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ —É @BotFather –≤ Telegram
# –£–∑–Ω–∞–π—Ç–µ chat_id, –Ω–∞–ø–∏—Å–∞–≤ –±–æ—Ç—É @userinfobot
TELEGRAM_BOT_TOKEN=–≤–∞—à-—Ç–æ–∫–µ–Ω-–±–æ—Ç–∞-–∑–¥–µ—Å—å
TELEGRAM_CHAT_ID=–≤–∞—à-chat-id-–∑–¥–µ—Å—å
EOF

    print_success "–§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —Å —à–∞–±–ª–æ–Ω–æ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
}

download_project_files() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
    PROJECT_DIR="$HOME/techbit"
    mkdir -p "$PROJECT_DIR"
    cd "$PROJECT_DIR"
    
    print_status "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
    
    # –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
    FILES=(
        "docker-compose.yml"
        "Dockerfile"
        "nginx/nginx.conf"
        "nginx/Dockerfile"
        "nginx/sites-available/techbit.conf"
        "nginx/sites-available/techbit-http.conf"
    )
    
    BASE_URL="https://raw.githubusercontent.com/your-repo/techbit-site/main"
    
    for file in "${FILES[@]}"; do
        print_status "–°–∫–∞—á–∏–≤–∞–Ω–∏–µ $file..."
        mkdir -p "$(dirname "$file")"
        if command -v curl &> /dev/null; then
            curl -sSL "$BASE_URL/$file" -o "$file"
        elif command -v wget &> /dev/null; then
            wget -q "$BASE_URL/$file" -O "$file"
        else
            print_error "–ù–µ –Ω–∞–π–¥–µ–Ω curl –∏–ª–∏ wget –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤"
            print_status "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ curl: sudo apt-get install curl"
            exit 1
        fi
    done
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env –∏–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    create_env_file
    
    print_success "–§–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ —Å–∫–∞—á–∞–Ω—ã –≤ $PROJECT_DIR"
}

setup_environment() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
    
    if [[ ! -f ".env" ]]; then
        create_env_file
        
        print_warning "–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Ñ–∞–π–ª .env –ø–µ—Ä–µ–¥ –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ–º!"
        echo ""
        echo "–û–°–ù–û–í–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´ –î–õ–Ø –ù–ê–°–¢–†–û–ô–ö–ò:"
        echo "  SMTP_USER=–≤–∞—à-email@yandex.ru"
        echo "  SMTP_PASS=–≤–∞—à-–ø–∞—Ä–æ–ª—å-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        echo "  TELEGRAM_BOT_TOKEN=—Ç–æ–∫–µ–Ω-–±–æ—Ç–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
        echo "  TELEGRAM_CHAT_ID=–≤–∞—à-chat-id (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
        echo ""
        
        read -p "–û—Ç–∫—Ä—ã—Ç—å —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ .env? (Y/n): " -n 1 -r
        echo
        if [[ ! $REPLY =~ ^[Nn]$ ]]; then
            ${EDITOR:-nano} .env
        fi
    else
        print_success "–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    fi
}

check_domain_dns() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ DNS –¥–ª—è techbit.su..."
    
    if command -v nslookup &> /dev/null; then
        if ! nslookup techbit.su &> /dev/null; then
            print_warning "–î–æ–º–µ–Ω techbit.su –Ω–µ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç—Å—è"
            print_warning "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–º–µ–Ω —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
            read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
            echo
            if [[ ! $REPLY =~ ^[Yy]$ ]]; then
                exit 1
            fi
        else
            print_success "DNS –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
        fi
    else
        print_warning "nslookup –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É DNS"
    fi
}

# =============================================================================
# –§–£–ù–ö–¶–ò–ò –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–Ø –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# =============================================================================

deploy_application() {
    print_status "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    print_status "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    docker compose down --remove-orphans || true
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p uploads
    
    # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
    print_status "–í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è..."
    echo "1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤—ã–π –æ–±—Ä–∞–∑ –∏–∑ Docker Hub (–±—ã—Å—Ç—Ä–æ)"
    echo "2. –°–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑ –ª–æ–∫–∞–ª—å–Ω–æ (–º–µ–¥–ª–µ–Ω–Ω–æ, –Ω–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ)"
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º (1/2): " -n 1 -r
    echo
    
    if [[ $REPLY == "2" ]]; then
        print_status "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É..."
        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º docker-compose.yml –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—É—é —Å–±–æ—Ä–∫—É
        sed -i 's|image: sterks/techbit-site:latest|# image: sterks/techbit-site:latest|' docker-compose.yml
        sed -i 's|# build:|build:|' docker-compose.yml
        sed -i 's|#   context: .|  context: .|' docker-compose.yml
        sed -i 's|#   dockerfile: Dockerfile|  dockerfile: Dockerfile|' docker-compose.yml
        
        print_status "–°–±–æ—Ä–∫–∞ –æ–±—Ä–∞–∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        docker compose build app
    else
        print_status "–ó–∞–≥—Ä—É–∑–∫–∞ –≥–æ—Ç–æ–≤–æ–≥–æ –æ–±—Ä–∞–∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
        docker pull sterks/techbit-site:latest
    fi
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ nginx
    print_status "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ nginx..."
    docker compose up -d app nginx
    
    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    print_status "–û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
    sleep 10
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker compose ps
}

setup_ssl_certificate() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ HTTP
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–∞–π—Ç–∞ –ø–æ HTTP..."
    if curl -s -o /dev/null -w "%{http_code}" http://localhost | grep -q "200"; then
        print_success "–°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTP"
        
        # –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
        print_status "–ü–æ–ª—É—á–µ–Ω–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –æ—Ç Let's Encrypt..."
        print_warning "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –¥–æ–º–µ–Ω techbit.su —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ IP —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞"
        
        if docker compose --profile ssl run --rm certbot; then
            print_success "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω!"
            
            # –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            print_status "–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
            # –û–±–Ω–æ–≤–ª—è–µ–º docker-compose.yml –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è HTTPS –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            sed -i 's|techbit-http.conf:/etc/nginx/conf.d/default.conf|techbit.conf:/etc/nginx/conf.d/default.conf|' docker-compose.yml
            docker compose restart nginx
            
            # –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
            print_status "–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤..."
            docker compose --profile ssl up -d certbot-renewal
            
            print_success "HTTPS –Ω–∞—Å—Ç—Ä–æ–µ–Ω! –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω: https://techbit.su"
        else
            print_warning "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
            print_warning "–°–∞–π—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º –ø–æ HTTP: http://techbit.su"
            print_status "–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
            print_status "  docker compose --profile ssl run --rm certbot"
            print_status "  cp nginx/sites-available/techbit.conf nginx/sites-enabled/default.conf"
            print_status "  docker compose build nginx && docker compose restart nginx"
        fi
    else
        print_error "–°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ HTTP!"
        print_status "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: docker compose logs app nginx"
        return 1
    fi
}

# =============================================================================
# –ì–õ–ê–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
# =============================================================================

main() {
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    check_system_requirements
    
    if [[ $MODE == "install" ]]; then
        # –†–µ–∂–∏–º –ø–æ–ª–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        download_project_files
        setup_environment
    else
        # –†–µ–∂–∏–º –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
        print_status "–ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã –≤ $SCRIPT_DIR"
        cd "$SCRIPT_DIR"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
        if [[ ! -f ".env" ]]; then
            setup_environment
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS
    check_domain_dns
    
    # –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    deploy_application
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL
    setup_ssl_certificate
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    print_status "–§–∏–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    docker compose ps
    
    # –£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
    print_success "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!"
    echo ""
    echo "============================================================================="
    echo "TECHBIT –£–°–ü–ï–®–ù–û –†–ê–ó–í–ï–†–ù–£–¢!"
    echo "============================================================================="
    print_status "HTTP:  http://techbit.su"
    if [[ -f nginx/sites-enabled/default.conf ]] && grep -q "listen 443" nginx/sites-enabled/default.conf; then
        print_status "HTTPS: https://techbit.su"
    fi
    echo ""
    echo "–ü–û–õ–ï–ó–ù–´–ï –ö–û–ú–ê–ù–î–´:"
    echo "  docker compose ps              # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤"
    echo "  docker compose logs -f app     # –õ–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  docker compose logs -f nginx   # –õ–æ–≥–∏ nginx"
    echo "  docker compose restart         # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  docker compose down            # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤"
    echo "  docker compose pull app        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–∑–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo ""
    echo "–û–ë–ù–û–í–õ–ï–ù–ò–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:"
    echo "  ./setup.sh                     # –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∑–∞–Ω–æ–≤–æ"
    echo ""
echo "–†–£–ß–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê SSL (–µ—Å–ª–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å):"
echo "  1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ DNS:    nslookup techbit.su"
echo "  2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ HTTP:   curl -I http://techbit.su"
echo "  3. –ü–æ–ª—É—á–∏—Ç–µ SSL:     docker compose --profile ssl run --rm certbot"
echo "  4. –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ HTTPS: sed -i 's|techbit-http.conf|techbit.conf|' docker-compose.yml"
echo "  5. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ:    docker compose restart nginx"
    echo ""
    echo "============================================================================="
}

# –ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
