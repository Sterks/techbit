import nodemailer from 'nodemailer'

export default defineEventHandler(async (event) => {
  try {
    const body = await readBody(event)
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (—Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏–ª–∏ –∫–æ–≥–¥–∞ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω)
    const isTestMode = process.env.NODE_ENV === 'development' && process.env.EMAIL_TEST_MODE === 'true'
    
    if (!isTestMode) {
      const requiredEnvVars = ['SMTP_HOST', 'SMTP_PORT', 'SMTP_USER', 'SMTP_PASS', 'ADMIN_EMAIL']
      const missingVars = requiredEnvVars.filter(varName => !process.env[varName])
      
      if (missingVars.length > 0) {
        console.error('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:', missingVars)
        throw createError({
          statusCode: 500,
          statusMessage: `–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: ${missingVars.join(', ')}`
        })
      }
    } else {
      // –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –Ω—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ ADMIN_EMAIL
      if (!process.env.ADMIN_EMAIL) {
        console.error('–í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –Ω—É–∂–µ–Ω ADMIN_EMAIL')
        throw createError({
          statusCode: 500,
          statusMessage: '–ù–µ —É–∫–∞–∑–∞–Ω ADMIN_EMAIL –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞'
        })
      }
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    const { name, email, company, service, message } = body
    
    if (!name || !email || !service || !message) {
      throw createError({
        statusCode: 400,
        statusMessage: '–í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã'
      })
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    if (!emailRegex.test(email)) {
      throw createError({
        statusCode: 400,
        statusMessage: '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email –∞–¥—Ä–µ—Å'
      })
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—á—Ç—ã
    let transporter
    if (isTestMode) {
      // –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º - —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç
      const testAccount = await nodemailer.createTestAccount()
      transporter = nodemailer.createTransport({
        host: 'smtp.ethereal.email',
        port: 587,
        secure: false,
        auth: {
          user: testAccount.user,
          pass: testAccount.pass,
        },
      })
      console.log('üß™ EMAIL TEST MODE: –ü–∏—Å—å–º–∞ –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã —Ä–µ–∞–ª—å–Ω–æ')
    } else {
      transporter = nodemailer.createTransport({
        host: process.env.SMTP_HOST,
        port: parseInt(process.env.SMTP_PORT || '587'),
        secure: process.env.SMTP_SECURE === 'true',
        auth: {
          user: process.env.SMTP_USER,
          pass: process.env.SMTP_PASS
        },
        connectionTimeout: 10000, // 10 —Å–µ–∫—É–Ω–¥
        greetingTimeout: 10000,   // 10 —Å–µ–∫—É–Ω–¥
        socketTimeout: 10000      // 10 —Å–µ–∫—É–Ω–¥
      })
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Gmail SMTP...')
      try {
        await transporter.verify()
        console.log('‚úÖ SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!')
      } catch (verifyError) {
        const errorMessage = verifyError instanceof Error ? verifyError.message : String(verifyError)
        console.error('‚ùå –û—à–∏–±–∫–∞ SMTP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', errorMessage)
        throw createError({
          statusCode: 500,
          statusMessage: `–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ø–æ—á—Ç–æ–≤–æ–º—É —Å–µ—Ä–≤–µ—Ä—É: ${errorMessage}`
        })
      }
    }

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —É—Å–ª—É–≥–∏
    const serviceNames: Record<string, string> = {
      'automation': '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤',
      'devops': 'DevOps –ø—Ä–∞–∫—Ç–∏–∫–∏',
      'web-development': '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      'consulting': 'IT –∫–æ–Ω—Å–∞–ª—Ç–∏–Ω–≥'
    }

    const serviceName = serviceNames[service] || service

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∏—Å—å–º–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const adminMailOptions = {
      from: process.env.SMTP_FROM,
      to: process.env.ADMIN_EMAIL,
      subject: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ TechBit - ${serviceName}`,
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h2 style="color: #2563eb; border-bottom: 2px solid #e5e7eb; padding-bottom: 10px;">
            –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ TechBit
          </h2>
          
          <div style="background: #f9fafb; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h3 style="color: #374151; margin-top: 0;">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–ª–∏–µ–Ω—Ç–µ:</h3>
            <p><strong>–ò–º—è:</strong> ${name}</p>
            <p><strong>Email:</strong> <a href="mailto:${email}">${email}</a></p>
            ${company ? `<p><strong>–ö–æ–º–ø–∞–Ω–∏—è:</strong> ${company}</p>` : ''}
            <p><strong>–£—Å–ª—É–≥–∞:</strong> ${serviceName}</p>
          </div>
          
          <div style="background: #fff; padding: 20px; border: 1px solid #e5e7eb; border-radius: 8px;">
            <h3 style="color: #374151; margin-top: 0;">–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:</h3>
            <p style="white-space: pre-wrap; line-height: 1.6;">${message}</p>
          </div>
          
          <div style="margin-top: 20px; padding: 15px; background: #dbeafe; border-radius: 8px;">
            <p style="margin: 0; color: #1e40af;">
              <strong>üí° –°–æ–≤–µ—Ç:</strong> –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 2-4 —á–∞—Å–æ–≤ –¥–ª—è –ª—É—á—à–µ–≥–æ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è.
            </p>
          </div>
        </div>
      `
    }

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∏—Å—å–º–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ (–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç)
    const clientMailOptions = {
      from: process.env.SMTP_FROM,
      to: email,
      subject: '–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ –≤ TechBit!',
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <div style="background: linear-gradient(135deg, #2563eb, #7c3aed); color: white; padding: 30px; text-align: center; border-radius: 8px 8px 0 0;">
            <h1 style="margin: 0; font-size: 28px;">TechBit</h1>
            <p style="margin: 10px 0 0 0; opacity: 0.9;">IT —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞</p>
          </div>
          
          <div style="background: white; padding: 30px; border: 1px solid #e5e7eb; border-top: none; border-radius: 0 0 8px 8px;">
            <h2 style="color: #374151; margin-top: 0;">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${name}!</h2>
            
            <p style="color: #6b7280; line-height: 1.6;">
              –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É –Ω–∞ —É—Å–ª—É–≥—É "<strong>${serviceName}</strong>" 
              –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤.
            </p>
            
            <div style="background: #f3f4f6; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <h3 style="color: #374151; margin-top: 0;">–ß—Ç–æ –¥–∞–ª—å—à–µ?</h3>
              <ul style="color: #6b7280; line-height: 1.6;">
                <li>–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∏–∑—É—á–∏—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å</li>
                <li>–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π</li>
                <li>–ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ</li>
                <li>–û–±—Å—É–¥–∏–º —Å—Ä–æ–∫–∏ –∏ —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç–∞</li>
              </ul>
            </div>
            
            <div style="background: #dbeafe; padding: 20px; border-radius: 8px; margin: 20px 0;">
              <h3 style="color: #1e40af; margin-top: 0;">üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –¥–ª—è —Å—Ä–æ—á–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:</h3>
              <p style="margin: 5px 0; color: #374151;"><strong>Email:</strong> info@techbit.su</p>
              <p style="margin: 5px 0; color: #374151;"><strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> +7 (910) 537-39-05</p>
              <p style="margin: 5px 0; color: #6b7280;">–ü–Ω-–ü—Ç: 9:00 - 21:00</p>
            </div>
            
            <p style="color: #9ca3af; font-size: 14px; margin-top: 30px;">
              –° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>
              –ö–æ–º–∞–Ω–¥–∞ TechBit
            </p>
          </div>
        </div>
      `
    }

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º
    const [adminResult, clientResult] = await Promise.all([
      transporter.sendMail(adminMailOptions),
      transporter.sendMail(clientMailOptions)
    ])

    if (isTestMode) {
      console.log('üìß –¢–µ—Å—Ç–æ–≤—ã–µ –ø–∏—Å—å–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã:')
      console.log('   –ê–¥–º–∏–Ω—É:', nodemailer.getTestMessageUrl(adminResult))
      console.log('   –ö–ª–∏–µ–Ω—Ç—É:', nodemailer.getTestMessageUrl(clientResult))
    } else {
      console.log('‚úÖ –ü–∏—Å—å–º–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã:', {
        admin: adminResult.messageId,
        client: clientResult.messageId
      })
    }

    return {
      success: true,
      message: '–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!'
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error)
    
    throw createError({
      statusCode: 500,
      statusMessage: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
    })
  }
})
